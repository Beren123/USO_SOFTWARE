install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("libcurl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages("foreign")
library(foreign)
students<-read.dta("/home/nitnelav/SIMCE/simce8b2013/simce8b2013_alu_publica_final.dta")
students<-read.dta("/home/nitnelav/SIMCE/simce8b2013/DTA/simce8b2013_alu_publica_final.dta")
View(students)
students07<-read.dta("/home/nitnelav/SIMCE/simce4b2007/DTA/simce4b2007_alu_publica_final.dta")
View(students07)
parents07<-read.dta("/home/nitnelav/SIMCE/simce4b2007/DTA/simce4b2007_cpad_publica_final.dta")
library(foreign)
salary<-read.dta("/home/nitnelav/salary.dta")
View(salary)
help(write.dta)
write.dta(salary)
write.dta(salary, "/home/nitnelav/salary.sav")
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)}, c(8,4,0))
evaluate(function(x){x[-1]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Great powers", "comes with", "great responsibilities")
submit()
mad_libs(place="zona 8", adjective="depraved", noun="potato")
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
exit
q()
q()
installp.ackages("swirl")
install.packages("swirl")
library(swirl)
install.packages("openssl")
install.packages("curl")
install.packages("openssl")
install.packages("curl")
install.packages("swirl")
install.packages("openssl")
install.packages("swirl")
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
clas_list<-lapply(flags,class)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes<-flags[, 19:23]
lapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
swirl()
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
heads(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1), 100, prob = c(0.3,0.7))
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1,size = 100, prob = 0.7)
flips2<-rbinom(100,size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
install_from_swirl("Statistical Inference")
swirl()
1 - 3/36
deck
52
4/52
0
12/52
3/12
2/12
2/51
0,64
0.64
0.64
mypdf
?inmtegrate
?integrate
integrate(mypdf, 0, 1.6)
sqrt(2)
0.000997
0.984015
0.015*0.999
0.000997/(0.000997+0.014985)
21/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
6 + 19
x^y
log(1000)
log(e)
log(1)
log(0)
log(10)
?log
log10(1000)
log(100, 10)
23 + 7 + 14 / 2
(23 + 7 + 14) / 2
x + y
log(500*2, sqrt(100))
?sqrt
x<-10
y<-17
x + y
x<-27/3
y<-log(x)
z<-exp(y)
z
library(swirl)
install_course_url ("https://d37djvu3ytnwxt.cloudfront.net/assets/courseware/v1/edade914aa1adf483fc76fef598a5906/asset-v1:MITx+14.310x+2T2017+type@asset+block/14_310x_Intro_to_R.zip ")
swirl()
1
swirl()
5 + 7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
z*2+1000
my_div
q()
library(swirl)
swirl()
getwd()
install_course_zip("/home/nitnelav/14_310x_Intro_to_R.zip", multi = FALSE)
swirl()
5+7
q()
2
info()
main()
getwd()
setwd("/home/nitnelav/soc_stats")
library(swirl)
library(swirlify)
get_current_lesson()
swirlify()
swirlify()
swirlify()
swirlify()
swirlify()
swirlify()
10+17
x<-5
x<-2*25^2
2*(25^2)
x<-2*(25^2)
x
lista1<-c(25,32,87,91)
lista1 + 750
100:1
?seq
rep(27,100)
rep(1:10,3)
rep(1:5,2)
rep(1:5,each=2)
rep(c(34,88,71,24),100)
help("sample")
sample(1:5,10,replace = TRUE)
swirlify()
library(foreign)
install.packages("foreign")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
setwd("/home/nitnelav/2017_2/USO_SOFTWARE/05. Formatos")
slidify("index.Rmd")
install.packages("foreign", repos = "https://dirichlet.mat.puc.cl/")
getwd()
library(foreign)
hombre<-sample(c(0,1),20,replace = TRUE)
spss2<-cbind(spss1,hombre)
View(spss2)
?write.foreign
