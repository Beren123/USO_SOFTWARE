install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("libcurl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages("foreign")
library(foreign)
students<-read.dta("/home/nitnelav/SIMCE/simce8b2013/simce8b2013_alu_publica_final.dta")
students<-read.dta("/home/nitnelav/SIMCE/simce8b2013/DTA/simce8b2013_alu_publica_final.dta")
View(students)
students07<-read.dta("/home/nitnelav/SIMCE/simce4b2007/DTA/simce4b2007_alu_publica_final.dta")
View(students07)
parents07<-read.dta("/home/nitnelav/SIMCE/simce4b2007/DTA/simce4b2007_cpad_publica_final.dta")
library(foreign)
salary<-read.dta("/home/nitnelav/salary.dta")
View(salary)
help(write.dta)
write.dta(salary)
write.dta(salary, "/home/nitnelav/salary.sav")
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)}, c(8,4,0))
evaluate(function(x){x[-1]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Great powers", "comes with", "great responsibilities")
submit()
mad_libs(place="zona 8", adjective="depraved", noun="potato")
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
exit
q()
q()
installp.ackages("swirl")
install.packages("swirl")
library(swirl)
install.packages("openssl")
install.packages("curl")
install.packages("openssl")
install.packages("curl")
install.packages("swirl")
install.packages("openssl")
install.packages("swirl")
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
clas_list<-lapply(flags,class)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes<-flags[, 19:23]
lapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
swirl()
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
heads(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1), 100, prob = c(0.3,0.7))
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1,size = 100, prob = 0.7)
flips2<-rbinom(100,size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
install_from_swirl("Statistical Inference")
swirl()
1 - 3/36
deck
52
4/52
0
12/52
3/12
2/12
2/51
0,64
0.64
0.64
mypdf
?inmtegrate
?integrate
integrate(mypdf, 0, 1.6)
sqrt(2)
0.000997
0.984015
0.015*0.999
0.000997/(0.000997+0.014985)
21/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
6 + 19
x^y
log(1000)
log(e)
log(1)
log(0)
log(10)
?log
log10(1000)
log(100, 10)
23 + 7 + 14 / 2
(23 + 7 + 14) / 2
x + y
log(500*2, sqrt(100))
?sqrt
x<-10
y<-17
x + y
x<-27/3
y<-log(x)
z<-exp(y)
z
library(swirl)
install_course_url ("https://d37djvu3ytnwxt.cloudfront.net/assets/courseware/v1/edade914aa1adf483fc76fef598a5906/asset-v1:MITx+14.310x+2T2017+type@asset+block/14_310x_Intro_to_R.zip ")
swirl()
1
swirl()
5 + 7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
z*2+1000
my_div
q()
library(swirl)
swirl()
getwd()
install_course_zip("/home/nitnelav/14_310x_Intro_to_R.zip", multi = FALSE)
swirl()
5+7
q()
2
info()
main()
library(foreign)
uno<-read.spss("/home/nitnelav/ALPHA/ENE 2017 07 JJA.sav", to.data.frame = TRUE)
head(uno)
names(uno)
View(uno)
prog1<-data.frame(id = c(1,2,3,4,5,6,7,8,9,10),
sexo = c("Masc", "Fem", "Masc", "Fem", "Fem", "Masc", "Masc", "Fem", "Fem", "Masc"))
View(prog1)
prog1<-data.frame(id = c(1,2,3,4,5,6,7,8,9,10),
sexo = c("Masc", "Fem", "Masc", "Fem", "Fem", "Masc", "Masc", "Fem", "Fem", "Masc"),
edad = c(19,22,25,21,18,26,28,20,18,22),
altura = c(175,164,159,170,181,166,180,167,176,184),
peso = c(73,53,64,63,72,66,76,54,57,78),
paa = c(753,698,612,720,615,740,678,819,765,643),
ecivil = c("S", "S", "C", "S", "S", "C", "C", "S", "S", "C"),
edpad = c(12,6,8,15,13,12,14,15,12,10),
sse = c("Alto", "Medio", "Bajo", "Medio", "Bajo", "Alto", "Medio", "Alto", "Alto", "Bajo"))
#Documentación del dataframe
str(prog1)
#Impresión de los datos.
prog1
sapply(c(prog1$edad, prog1$altura), mean)
mean(c(prog1$edad, prog1$altura))
mean(prog1$edad)
mean(prog1$altura)
mode(prog1$edad)
median(prog1$edad)
#Media aritmética de las variables seleccionadas.
mean(prog1$edad)
mean(prog1$altura)
mean(prog1$peso)
mean(prog1$paa)
mean(prog1$edpad)
#Moda de las mismas variables
table(prog1$edad)
table(prog1$altura)
table(prog1$peso)
table(prog1$paa)
table(prog1$edpad)
#Mediana de las mismas variables
median(prog1$edad)
median(prog1$altura)
median(prog1$peso)
median(prog1$paa)
median(prog1$edpad)
?quantile
quantile(prog1$edad)
quantile(prog1$edad, c(0.25,0.75))
#Cuartiles 1 y 3 de paa
quantile(prog1$paa)
range(prog1$edpad)
range(prog1$paa)
var(prog1$edpad)
var(prog1$paa)
sd(prog1$edpad)
sd(prog1$edpad)
sd(prog1$paa)
sqrt(var(prog1$paa))
# tablas de frecuencias
table(prog1$sexo)
table(prog1$ecivil)
table(prog1$sse)
install.packages("car", repos = 'https://dirichlet.mat.puc.cl/')
library(car)
install.packages("car", repos = 'https://dirichlet.mat.puc.cl/')
library(car)
install.packages("nloptr")
install.packages("nloptr")
install.packages("nloptr")
fumadores<-data.frame(id = 1:36,
edad_muerte = c(sample(70:90,18,replace = TRUE), sample(60:80, 18,
replace = TRUE)),
fuma = c(rep("No", 18), rep("Sí",18)),
sexo = sample(c("Hombre", "Mujer"), 36, replace = TRUE))
head(fumadores, 5)
bartlett.test(fumadores$edad_muerte~fumadores$fuma)
tapply(fumadores$edad_muerte, fumadores$fuma, mean)
?t.test
t.test(edad_muerte~fuma, data = fumadores, var.equal=TRUE)
wilcox.test(edad_muerte~fuma, data=fumadores)
t.test(bebedores$tragos_post,bebedores$tragos_pre, paired = TRUE)
install.package("ggimage")
install.packages("ggimage")
install.packages("ggimage")
install.packages("ggimage")
devtools::install_github("GuangchuangYu/ggimage")
install.packages("magick")
install.packages("magick")
require(ggimage)
install.packages("ggimage")
?install.packages
install.packages("ggimage", dependencies = FALSE)
install.packages("ggimage", dependencies = NULL)
citation()
0.95^3
1-0.95^3
install.packages("car")
library(car)
software<-data.frame(id = 1:60,
software = c(rep("R", 20), rep("SAS", 20), rep("SPSS", 20)),
facilidad = c(sample(10:40, 20, replace = T),
sample(25:65, 20, replace = T), sample(40:80, 20, replace = T)),
flexibilidad = c(sample(50:85, 20, replace = T),
sample(30:60, 20, replace = T), sample(10:35, 20, replace = T)),
actualizacion = c(sample(50:100, 20, replace = T),
sample(20:60, 20, replace = T), sample(20:60, 20, replace = T)))
str(software)
View(software)
library(psych)
describe(software)
tapply(software$facilidad, software$software, mean)
tapply(software$flexibilidad, software$software, mean)
tapply(software$actualizacion, software$software, mean)
bartlett.test(software$actualizacion)
help("bartlett.test")
bartlett.test(software$actualizacion, software$software)
bartlett.test(software$facilidad, software$software)
bartlett.test(software$flexibilidad, software$software)
library(car)
?leveneTest
leveneTest(software$actualizacion~software$software)
tapply(software$facilidad, software$software, shapiro.test)
by(software$facilidad, software$software, shapiro.test)
sapply(software$facilidad, software$software, shapiro.test)
lapply(software$facilidad, software$software, shapiro.test)
apply(software$facilidad, software$software, shapiro.test)
anova1<-aov(facilidad~software, data = software)
summary(anova1)
plot(anova1)
plot(anova1)
TukeyHSD(anova1)
boxplot(anova1)
boxplot(software$facilidad~software$software)
oneway.test(facilidad~software, data = software)
anova2<-oneway.test(facilidad~software, data = software)
TukeyHSD(anova2)
kruskal.test(facilidad~software, data = software)
anova2<-kruskal.test(facilidad~software, data = software)
TukeyHSD(anova2)
q()
simulados<-data.frame(id=1:1500,
grupo = c(rep("Tratamiento",750), rep("Control", 750)),
edad = sample(20:70,1500,replace = TRUE),
iq = rnorm(1500, mean = 100, sd = 17),
escol =  rnorm(1500, mean = 12, sd = 1.5),
estcivil = factor(c("C", "S"), labels = c("Casado", "Soltero")))
View(simulados)
setwd("/home/nitnelav/2017_2/USO_SOFTWARE/08. Regresión Lineal")
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
library(ggplot2)
?ggplot
ggplot(data = mtcars, aes(x = wt, y = mpg))
data(mtcars)
ggplot(data = mtcars, aes(x = wt, y = mpg))
ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point()
ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point(color = 'green')
ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point(color = 'royalblue')
ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point(color = 'royalblue') + abline(reg = lm(mpg~wt, data = mtcars))
ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point(color = 'royalblue') + abline(coef = lm(mpg~wt, data = mtcars))
ggplot(data = mtcars, aes(x = wt, y = mpg)) + geom_point(color = 'royalblue')
?plot
plot(sin, -pi, 2*pi)
plot(sin, -pi, 2*pi)
plot(sin, -pi)
plot(sin, -pi, 2*pi)
plot(sin, -pi, 4*pi)
plot(sin, -pi, 88*pi)
plot(sin, -pi, 4*pi, 2*sin)
?lm
modelo1<-lm(mpg~wt, data = mtcars)
summary(modelo1)
ggplot(data = mtcars, aes(wt,mpg)) + geom_point()
?geom_abline
ggplot(data = mtcars, aes(wt,mpg)) + geom_point() + geom_abline()
ggplot(data = mtcars, aes(wt,mpg)) + geom_point() + geom_smooth(data = mtcars, formula = mpg~wt)
ggplot(data = mtcars, aes(wt,mpg)) + geom_point() + geom_smooth(method = "lm", formula = mtcars$mpg~mtcars$wt)
ggplot(data = mtcars, aes(wt,mpg)) + geom_point() + geom_smooth(method = "lm")
cor.test(mtcars$wt, mtcars$wt)
modelo1$effects
cor.test(mtcars$wt, mtcars$mpg)
cor(mtcars$wt, mtcars$mpg)^2
ggplot(data = mtcars, aes(wt,mpg)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
sum(modelo1$residuals)
ggplot(data = mtcars, aes(wt,mpg)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
names(mtcars)
help(mtcars)
modelo2<-lm(mpg ~ wt + hp, data = mtcars)
modelo2
lm(mpg ~ wt + hp, data = mtcars)
modelo2$effects
modelo2$model
modelo2$terms
modelo2$effects
modelo2$coefficients
modelo2$rank
modelo2$fitted.values
modelo2$assign
modelo2$call
View(modelo2)
summary(modelo2)
aov(modelo2)
anova(modelo2)
anova(modelo1)
summary.lm(modelo2)
View(regresion)
regresion<-data.frame(id = 1:1000,
dolor = rnorm(1000, mean = 65, sd = 15),
edad = sample(40:80, 1000, replace = T),
diagnostico = sample(c("Ébola", "Cáncer", "Lepra", "Bulimia"),
1000, replace = T),
drogas = sample(c("Sí", "No"), 1000, replace = T)),
hr_trabajo = rpois(1000, 40))
regresion<-data.frame(id = 1:1000,
dolor = rnorm(1000, mean = 65, sd = 15),
edad = sample(40:80, 1000, replace = T),
diagnostico = sample(c("Ébola", "Cáncer", "Lepra", "Bulimia"),
1000, replace = T),
drogas = sample(c("Sí", "No"), 1000, replace = T),
hr_trabajo = rpois(1000, 40))
View(regresion)
